generator client {
  provider = "prisma-client-js"
  output   = "../app/generated/prisma"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Contract {
  id               String   @id @default(cuid())
  address          String   @unique
  name             String?
  abi              Json
  network          String
  isActive         Boolean  @default(true)
  lastIndexedBlock BigInt?
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
  events           Event[]

  @@index([address])
  @@index([network])
  @@index([isActive])
}

model Event {
  id               String    @id @default(cuid())
  blockNumber      BigInt
  blockHash        String
  blockTimestamp   DateTime?
  transactionHash  String
  transactionIndex Int
  logIndex         Int
  contractId       String
  contractAddress  String
  eventName        String
  eventSignature   String
  indexedParams    Json
  data             Json
  rawLog           Json
  network          String
  createdAt        DateTime  @default(now())
  updatedAt        DateTime  @updatedAt
  contract         Contract  @relation(fields: [contractId], references: [id])

  @@unique([transactionHash, logIndex])
  @@index([blockNumber])
  @@index([contractAddress])
  @@index([eventName])
  @@index([transactionHash])
  @@index([network])
  @@index([blockNumber, contractAddress])
  @@index([eventName, contractAddress])
  @@index([blockTimestamp])
}

model Chain {
  id        String   @id @default(cuid())
  chainId   Int      @unique
  name      String
  rpcUrl    String
  blockTime Int?
  isActive  Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([chainId])
  @@index([isActive])
}

model IndexingStatus {
  id               String   @id @default(cuid())
  contractAddress  String
  network          String
  lastIndexedBlock BigInt
  lastIndexedAt    DateTime @default(now())
  isActive         Boolean  @default(true)
  errorCount       Int      @default(0)
  lastError        String?
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt

  @@unique([contractAddress, network])
  @@index([network])
  @@index([isActive])
}

model UserQuery {
  id            String   @id @default(cuid())
  queryHash     String   @unique
  query         Json
  resultCount   Int?
  executionTime Int?
  createdAt     DateTime @default(now())

  @@index([createdAt])
  @@index([executionTime])
}
